{"version":3,"sources":["components/game/tictactoe-ai.worker.js","components/game/tictactoe-ai-worker-wrapper.js","components/highscores/highscores-component.js","components/nameform/nameform-component.js","components/board/board-component.js","model/highscores.js","model/tictactoe.js","components/game/game-component.js","index.js"],"names":["Worker_fn","Worker","__webpack_public_path__","AiWorkerWrapper","this","worker","AiWorker","data","postMessage","msg","callback","addEventListener","HighscoresComponent","props","className","scores","map","score","ix","name","timeToString","time","scoreTime","split","month","date","year","NameFormComponent","state","value","event","setState","target","preventDefault","onNameSubmitted","onSubmit","handleSubmit","type","onChange","handleChange","React","Component","Zquare","useState","fade","setFade","mouseOverStyle","undefined","onClick","backgroundColor","opacity","transition","style","squareIx","onMouseEnter","onMouseLeave","BoardComponent","i","getSquareSymbol","onClicks","start","length","range","Array","keys","renderSquare","size","renderRow","Highscores","storageAPI","_storageAPI","_scores","getItem","JSON","parse","Number","isInteger","push","Date","sort","a","b","_save","setItem","stringify","TicTacToe","Error","_size","reset","_turn","_squares","ret","turn","fill","startIx","stride","symbol","cIx","checks","playerSymbol","_getChecks","maxScore","_scoreSegment","reduce","count","sym","getTurnSymbol","countPlayerSymbols","forEach","Math","floor","isValidMove","to","validMoves","getValidMoves","validMove","from","aMove","move","squares","sqrt","Status","status","ButtonComponent","text","Game","localStorage","game","_aiWaitTime","aiWorker","onBoardClick","oldTurn","doMove","onGameUpdate","checkWinner","isAITurn","setTimeout","gameSquares","aiWaitTime","tttGame","winner","newScore","addScore","vmIx","resetGame","resetHighscores","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6bb86c7.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/tictactoe-ai.worker.7a17dacd.worker.js\");\n}\n","import AiWorker from './tictactoe-ai.worker'\r\n\r\nexport class AiWorkerWrapper {\r\n  constructor() {\r\n    this.worker = new AiWorker()\r\n  }\r\n\r\n  postMessage(data) {\r\n    this.worker.postMessage(data)\r\n  }\r\n\r\n  addEventListener(msg, callback) {\r\n    this.worker.addEventListener(msg, callback)\r\n  }\r\n}","import React from 'react'\r\n\r\nimport './highscores-component.css'\r\nexport function HighscoresComponent(props) {\r\n\r\n  return (\r\n    <div className=\"highscores\">\r\n      <h2>Highscores</h2>\r\n      <div className=\"centering\">\r\n      <table>\r\n        <thead><tr><th>Score</th><th>Name</th><th>Date</th></tr></thead>\r\n        <tbody>\r\n        {props.scores.scores.map((score, ix) => {return(<tr className=\"score-row\" key={ix}><td>{score.score}</td><td>{score.name}</td><td>{timeToString(score.time)}</td></tr>)})}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction timeToString(scoreTime) {\r\n  const [, month, date, year, time] = scoreTime.split(\" \")\r\n  return `${date} ${month} ${year} - ${time}` // to avoid unused var problem in eslint\r\n}","import React from 'react'\r\n\r\nexport class NameFormComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {value: ''}\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value})\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.props.onNameSubmitted) {\r\n      this.props.onNameSubmitted(this.state.value)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>You Made it to the Highscores</h2>\r\n      <form onSubmit={(event) => {return this.handleSubmit(event)}}>\r\n        <label>\r\n          Enter Name: \r\n          <input type=\"text\" value={this.state.value} onChange={(event) => {return this.handleChange(event)}} />\r\n        </label>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport './board-component.css'\r\n\r\nconst Zquare = props => {\r\n\r\n  const [ fade, setFade ] = useState(false);\r\n\r\n  const mouseOverStyle = fade && props.onClick !== undefined ? {backgroundColor:'#ddd', opacity: 1, transition: 'all .2s ease-in-out',} : {opacity: 1, transition: 'all .2s ease-in-out',}\r\n\r\n  return (\r\n    <button style={mouseOverStyle} className=\"square\"\r\n      onClick={props.onClick !== undefined ? () => props.onClick(props.squareIx) : undefined}\r\n      onMouseEnter =  {() => setFade(true)}\r\n      onMouseLeave =  {() => setFade(false)}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport class BoardComponent extends React.Component {\r\n  renderSquare(i) {\r\n    return <Zquare value={this.props.getSquareSymbol(i)}\r\n             onClick={this.props.onClicks[i]}\r\n             key={i}\r\n             squareIx={i}/>\r\n  }\r\n  \r\n  renderRow(start, length) {\r\n    const range = [...Array(length).keys()]\r\n    return (\r\n       <div className=\"board-row\" key={start}>\r\n         { range.map((i) => this.renderSquare(start + i))}\r\n       </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    \r\n    const size = this.props.size\r\n\r\n    const range = [...Array(size).keys()]\r\n    return (\r\n      <div className=\"game-board\">\r\n      <div>\r\n          { range.map((i) => this.renderRow(i * size, size)) }\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nexport class Highscores {\r\n  #_scores\r\n  #_storageAPI\r\n\r\n  constructor(storageAPI) {\r\n    this._storageAPI = storageAPI\r\n    this._scores = this._storageAPI.getItem('scores') !== undefined ? JSON.parse(this._storageAPI.getItem('scores')) : [];\r\n  }\r\n\r\n  addScore(score, name) {\r\n    if (name === undefined || name.length <= 0) {\r\n      return false\r\n    }\r\n    if (!Number.isInteger(score) || score < 0) {\r\n      return false\r\n    }\r\n    this._scores.push({score:score, name:name, time:Date()})\r\n    this._scores.sort((a, b) => {return b.score - a.score})\r\n    this._save()\r\n\r\n    return true\r\n  }\r\n\r\n  get scores() {\r\n    return [...this._scores]\r\n  }\r\n\r\n  _save() {\r\n    this._storageAPI.setItem('scores', JSON.stringify(this._scores))\r\n  }\r\n\r\n  reset() {\r\n    this._scores = []\r\n    this._save()\r\n  }\r\n}","export class TicTacToe {\r\n  #_size\r\n  #_squares\r\n  #_turn\r\n  \r\n  constructor(size) {\r\n    if (size < 3 || size % 2 !== 1) {\r\n      throw new Error(`The argument size: '${size}' is not valid for tic tac toe (3, 5, 7, ...)`) \r\n    }\r\n    this._size = size\r\n    this.reset()\r\n  }\r\n\r\n  get size() {\r\n    return this._size\r\n  }\r\n\r\n  get turn() {\r\n    return this._turn\r\n  }\r\n\r\n  get squares() {\r\n    return [...this._squares]\r\n  }\r\n\r\n  static createFrom(squares, turn) {\r\n    const ret = new TicTacToe(Math.floor(Math.sqrt(squares.length)))\r\n    ret._turn = turn\r\n    if (ret._squares.length !== squares.length) {\r\n      throw new Error(`The argument squares length: '${squares.length}' is not valid for tic tac toe (9, 25, 49, ...)`) \r\n    }\r\n    for (let i = 0; i < squares.length; i++) {\r\n      ret._squares[i] = squares[i]\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  from() {\r\n    const ret = new TicTacToe(this.size)\r\n    ret._turn = this.turn\r\n    for (let i = 0; i < this._squares.length; i++) {\r\n      ret._squares[i] = this._squares[i]\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  reset() {\r\n    this._turn = 0\r\n    this._squares = Array(this.size * this.size).fill(null)\r\n  }\r\n\r\n  _scoreSegment(startIx, stride, length, symbol = this._squares[startIx]) {\r\n    const _squares = this._squares\r\n    let score = 0\r\n      \r\n    for (let cIx = 0; cIx < length; cIx++, startIx += stride) {\r\n      if (symbol === _squares[startIx]) {\r\n        score++\r\n      }\r\n    }\r\n\r\n    return score\r\n  }\r\n\r\n  _getChecks() {\r\n    const size = this.size\r\n    // checks array with start and stride parameters\r\n    let checks = [[0, size + 1], [size - 1, size - 1]]  // the diagonal checks\r\n\r\n    // add all rows and col checks\r\n    for (let ix = 0; ix < size; ix++) {\r\n      checks.push([ix * size, 1])\r\n      checks.push([ix, size])\r\n    }\r\n\r\n    return checks\r\n  }\r\n\r\n  getScore(playerSymbol) {\r\n    const checks = this._getChecks()\r\n    let maxScore = 0\r\n    const size = this.size\r\n\r\n    for (let cIx = 0; cIx < checks.length; cIx++) {\r\n      const score = this._scoreSegment(checks[cIx][0], checks[cIx][1], size, playerSymbol)\r\n      if (score > maxScore) {\r\n        maxScore = score\r\n      }\r\n    }\r\n\r\n    return maxScore\r\n  }\r\n\r\n  checkWinner() {\r\n    const size = this.size\r\n    const checks = this._getChecks()\r\n    \r\n\r\n    // perform the checks\r\n    for (let cIx = 0; cIx < checks.length; cIx++) {\r\n      if (this._scoreSegment(checks[cIx][0], checks[cIx][1], size) === size) {\r\n        return this._squares[checks[cIx][0]]\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  getTurnSymbol(turn = this.turn) {\r\n    return turn % 2 === 0 ? 'X' : 'O'\r\n  }\r\n\r\n  getSquareSymbol(ix) {\r\n    return this._squares[ix]\r\n  }\r\n\r\n  countPlayerSymbols(symbol) {\r\n    return this._squares.reduce((count, sym) => sym === symbol ? count + 1 : count, 0)\r\n  }\r\n\r\n  getValidMoves() {\r\n    const playerSymbol = this.getTurnSymbol()\r\n    const allTokensUsed = this.countPlayerSymbols(playerSymbol) >= this.size\r\n\r\n    function isValidMove(ix, turn, _squares) {\r\n      if (turn === 0 && ix === Math.floor(_squares.length / 2)) {\r\n        return false\r\n      }\r\n  \r\n      return _squares[ix] === null\r\n    }\r\n\r\n    if (allTokensUsed) {\r\n      // first remove one token, then get all free squares\r\n      const ret = []\r\n      for(let i = 0; i < this._squares.length; i++) {\r\n        if (this.getSquareSymbol(i) === playerSymbol) {\r\n          this._squares[i] = null;\r\n          const validMoves = this.getValidMoves() // fetches an array of arrays with valid moves\r\n          this._squares[i] = playerSymbol\r\n\r\n          validMoves.forEach((validMove) => {\r\n            if (i !== validMove.to) {\r\n              ret.push({ from: i, to: validMove.to }) // first i must be removed and then moved to ix\r\n            }\r\n          })\r\n        }\r\n      }\r\n      return ret\r\n    } else {\r\n      // all free squares are valid moves\r\n      const ret = []\r\n      this._squares.forEach((symbol, ix) => {\r\n        if (isValidMove(ix, this.turn, this._squares)) {\r\n          ret.push({to:ix})\r\n        }\r\n      })\r\n\r\n      return ret\r\n    }\r\n  }\r\n\r\n  doMove(aMove) {\r\n    if (Number.isInteger(aMove)) {\r\n      aMove = this._squares[aMove] === null ? {to: aMove} : {from:aMove}\r\n    }\r\n    const validMoves = this.getValidMoves()\r\n    \r\n    for (let move of validMoves) {\r\n    \r\n      if (aMove.from === move.from && (aMove.to === undefined || aMove.to === move.to)) {\r\n        if (aMove.from !== undefined) {\r\n          this._squares[aMove.from] = null\r\n        }\r\n        if (aMove.to !== undefined) {\r\n          this._squares[aMove.to] = this.getTurnSymbol()\r\n          this._turn++\r\n        }\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n}","import React from 'react'\r\nimport './game-component.css'\r\nimport {AiWorkerWrapper} from './tictactoe-ai-worker-wrapper'\r\nimport {HighscoresComponent} from '../highscores/highscores-component'\r\nimport {NameFormComponent} from '../nameform/nameform-component'\r\nimport {BoardComponent} from '../board/board-component'\r\nimport {Highscores} from '../../model/highscores'\r\nimport { TicTacToe } from '../../model/tictactoe'\r\n\r\n\r\nfunction Status(props) {\r\n  return (\r\n    <div>{props.status}</div>\r\n  )\r\n}\r\n\r\nfunction ButtonComponent(props) {\r\n  return (\r\n    <button onClick={props.onClick}>\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport class Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      status: \"Game Not Started\",\r\n      scores: new Highscores(props.localStorage !== undefined ? props.localStorage : localStorage),\r\n      game: new TicTacToe(3)\r\n    }\r\n\r\n    this._aiWaitTime = 2000\r\n\r\n    this.aiWorker = new AiWorkerWrapper()\r\n    this.aiWorker.addEventListener('message', (event) => {this.onBoardClick(event.data.ix)});\r\n  }\r\n\r\n  get aiWaitTime() {\r\n    return this._aiWaitTime\r\n  }\r\n\r\n  onBoardClick(squareIx) {\r\n    const oldTurn = this.state.game.turn\r\n    if (this.state.game.doMove(squareIx)) {\r\n      \r\n      this.onGameUpdate(this.state.game)\r\n      \r\n      // the ai may send 1 click (to remove a symbol) then we should not start the ai again\r\n      // so we need to check that the turn has gone from human to ai\r\n      if (!this.state.game.checkWinner() && this.isAITurn() && oldTurn !== this.state.game.turn) {\r\n        const game = this.state.game\r\n      \r\n        // this simulates some thinking time that makes the experience better\r\n        setTimeout( () => {\r\n          this.aiWorker.postMessage({gameSquares: game.squares, turn: game.turn})\r\n        }, this.aiWaitTime)\r\n      }\r\n    }\r\n  }\r\n\r\n  onGameUpdate(tttGame) {\r\n    const winner = tttGame.checkWinner()\r\n    let newScore = this.state.newScore\r\n    if (winner) {\r\n      newScore = tttGame.turn\r\n    }\r\n\r\n    this.setState({game: tttGame, scores: this.state.scores, newScore: newScore})\r\n  }\r\n\r\n  onNameSubmitted(name, score) {\r\n    if (this.state.scores.addScore(score, name)) {\r\n      this.setState({game: this.state.game, scores: this.state.scores, newScore: undefined})\r\n    }\r\n  }\r\n  \r\n  isAITurn() {\r\n    const game = this.state.game\r\n    return game.getTurnSymbol() === game.getTurnSymbol(1)\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState({game: new TicTacToe(this.state.game.size), scores: this.state.scores, newScore: undefined})\r\n  }\r\n\r\n  resetHighscores() {\r\n    this.state.scores.reset()\r\n    this.setState({game: this.state.game, scores: this.state.scores, newScore: undefined})\r\n  }\r\n\r\n  render() {\r\n    const game = this.state.game\r\n    let status = `Turn: ${game.turn + 1} Next Player: ${game.getTurnSymbol()}`\r\n\r\n    const winner = game.checkWinner()\r\n    if (winner) {\r\n      status = `Winner is: ${winner} at Turn: ${game.turn}`\r\n    }\r\n\r\n    const onClicks = []\r\n    const validMoves = game.getValidMoves();\r\n    for (let i = 0; i < game.size * game.size; i++) {\r\n      let validMove = false\r\n      if (!game.checkWinner() && !this.isAITurn()) {\r\n        for (let vmIx = 0; vmIx < validMoves.length; vmIx++) {\r\n          if ((validMoves[vmIx] !== undefined && validMoves[vmIx].from === i) || (validMoves[vmIx].from === undefined && validMoves[vmIx].to === i)) {\r\n            validMove = true\r\n            break\r\n          }\r\n        }\r\n      }\r\n      \r\n      onClicks.push(validMove ? (squareIx) => {this.onBoardClick(squareIx)} : undefined)\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-info\">\r\n          <Status status={status}/>  \r\n        </div>\r\n        <BoardComponent onClicks={onClicks} size={game.size} getSquareSymbol={(squareIx) => {return game.getSquareSymbol(squareIx)}}/>\r\n        <div className=\"controls\">\r\n        <ButtonComponent text=\"Reset Game\" onClick={() => {this.resetGame()}}/>\r\n        </div>\r\n        \r\n        {this.state.newScore ? <NameFormComponent onNameSubmitted={(name) => {this.onNameSubmitted(name, this.state.newScore)}}/>:''}\r\n        <HighscoresComponent scores={this.state.scores} />\r\n        <div className=\"controls\">\r\n        <ButtonComponent text=\"Reset Highscores\" onClick={() => {this.resetHighscores()}}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {Game} from './components/game/game-component'\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}