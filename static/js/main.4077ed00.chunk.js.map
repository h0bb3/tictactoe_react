{"version":3,"sources":["components/highscores/highscores-component.js","components/nameform/nameform-component.js","components/board/board-component.js","model/highscores.js","model/tictactoe.js","model/tictactoe-ai.js","components/game/game-component.js","index.js"],"names":["HighscoresComponent","props","className","scores","map","score","ix","name","timeToString","time","scoreTime","split","month","date","year","NameFormComponent","state","value","event","this","setState","target","preventDefault","onNameSubmitted","onSubmit","handleSubmit","type","onChange","handleChange","React","Component","Zquare","onClick","BoardComponent","i","doNada","getSquareSymbol","handleClick","start","length","range","Array","keys","renderSquare","size","renderRow","Highscores","_scores","localStorage","getItem","JSON","parse","push","Date","sort","a","b","_save","setItem","stringify","TicTacToe","Error","_size","reset","ret","_turn","turn","_squares","fill","startIx","stride","symbol","cIx","checks","playerSymbol","_getChecks","maxScore","_scoreSegment","reduce","count","sym","getTurnSymbol","countPlayerSymbols","forEach","Math","floor","isValidMove","to","validMoves","getValidMoves","validMove","from","aMove","Number","isInteger","move","undefined","doNegimaxMove","tttGame","TypeError","getNegiMaxMove","isArray","doMove","console","log","random","doRandomMove","depth","maxDepth","tieMoves","scoreMove","tttGameCopy","opponentMove","abs","pop","getScore","Status","status","ButtonComponent","text","Game","game","squareIx","onGameUpdate","checkWinner","isAITurn","thisObject","noAITimer","setTimeout","winner","newScore","addScore","onBoardClick","resetGame","resetHighscores","ReactDOM","render","document","getElementById"],"mappings":"sTAGO,SAASA,EAAoBC,GAElC,OACE,sBAAKC,UAAU,aAAf,UACE,4CACA,qBAAKA,UAAU,YAAf,SACA,kCACE,gCAAO,+BAAI,uCAAc,sCAAa,2CACtC,gCACCD,EAAME,OAAOA,OAAOC,KAAI,SAACC,EAAOC,GAAQ,OAAO,qBAAIJ,UAAU,YAAd,UAAmC,6BAAKG,EAAMA,QAAW,6BAAKA,EAAME,OAAU,6BAAKC,EAAaH,EAAMI,UAAvEH,gBAQvF,SAASE,EAAaE,GACpB,MAAoCA,EAAUC,MAAM,KAApD,mBAASC,EAAT,KAAgBC,EAAhB,KAAsBC,EAAtB,KAA4BL,EAA5B,KACA,MAAM,GAAN,OAAUI,EAAV,YAAkBD,EAAlB,YAA2BE,EAA3B,cAAqCL,GCpBhC,IAAMM,EAAb,kDACE,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CAACC,MAAO,IAFJ,EADrB,gDAME,SAAaC,GACXC,KAAKC,SAAS,CAACH,MAAOC,EAAMG,OAAOJ,UAPvC,0BAUE,SAAaC,GACXA,EAAMI,iBACFH,KAAKlB,MAAMsB,iBACbJ,KAAKlB,MAAMsB,gBAAgBJ,KAAKH,MAAMC,SAb5C,oBAiBE,WAAU,IAAD,OACP,OACE,gCACE,+DACF,sBAAMO,SAAU,SAACN,GAAW,OAAO,EAAKO,aAAaP,IAArD,SACE,gDAEE,uBAAOQ,KAAK,OAAOT,MAAOE,KAAKH,MAAMC,MAAOU,SAAU,SAACT,GAAW,OAAO,EAAKU,aAAaV,kBAxBrG,GAAuCW,IAAMC,W,OCCvCC,G,kKAEJ,WAAU,IAAD,OACP,OACE,wBAAQ7B,UAAU,SAAS8B,QAAS,kBAAM,EAAK/B,MAAM+B,WAArD,SACGb,KAAKlB,MAAMgB,Y,GALCY,IAAMC,YAWdG,EAAb,kKACE,SAAaC,EAAGC,GAAS,IAAD,OACtB,OAAO,cAAC,EAAD,CAAQlB,MAAOE,KAAKlB,MAAMmC,gBAAgBF,GACxCF,QAAS,kBAAKG,EAAS,EAAKA,SAAW,EAAKE,YAAYH,KACnDA,KAJlB,oBAOE,cAPF,yBAWE,SAAYA,GACVf,KAAKlB,MAAM+B,QAAQE,KAZvB,uBAeE,SAAUI,EAAOC,EAAQJ,GAAS,IAAD,OACzBK,EAAK,YAAOC,MAAMF,GAAQG,QAChC,OACG,qBAAKxC,UAAU,YAAf,SACIsC,EAAMpC,KAAI,SAAC8B,GAAD,OAAO,EAAKS,aAAaL,EAAQJ,EAAGC,OADlBG,KAlBvC,oBAwBE,WAAU,IAAD,OAEDH,GAAUhB,KAAKlB,MAAM+B,QACrBY,EAAOzB,KAAKlB,MAAM2C,KAElBJ,EAAK,YAAOC,MAAMG,GAAMF,QAC9B,OACE,qBAAKxC,UAAU,aAAf,SACA,8BACMsC,EAAMpC,KAAI,SAAC8B,GAAD,OAAO,EAAKW,UAAUX,EAAIU,EAAMA,EAAMT,cAjC5D,GAAoCN,IAAMC,W,gCCb7BgB,EAAb,WAGE,aAAe,6EACb3B,KAAK4B,QAAUC,aAAaC,QAAQ,UAAYC,KAAKC,MAAMH,aAAaC,QAAQ,WAAa,GAJjG,4CAOE,SAAS5C,EAAOE,GACdY,KAAK4B,QAAQK,KAAK,CAAC/C,MAAMA,EAAOE,KAAKA,EAAME,KAAK4C,SAChDlC,KAAK4B,QAAQO,MAAK,SAACC,EAAGC,GAAO,OAAOA,EAAEnD,MAAQkD,EAAElD,SAChDc,KAAKsC,UAVT,kBAaE,WACE,OAAO,YAAItC,KAAK4B,WAdpB,mBAiBE,WACEC,aAAaU,QAAQ,SAAUR,KAAKS,UAAUxC,KAAK4B,YAlBvD,mBAqBE,WACE5B,KAAK4B,QAAU,GACf5B,KAAKsC,YAvBT,K,gFCDaG,EAAb,WAKE,WAAYhB,GACV,GADiB,+LACbA,EAAO,GAAKA,EAAO,IAAM,EAC3B,MAAM,IAAIiB,MAAJ,8BAAiCjB,EAAjC,kDAERzB,KAAK2C,MAAQlB,EACbzB,KAAK4C,QAVT,sCAaE,WACE,OAAO5C,KAAK2C,QAdhB,kBAiBE,WACE,IAAME,EAAM,IAAIJ,EAAUzC,KAAKyB,MAC/BoB,EAAIC,MAAQ9C,KAAK+C,KACjB,IAAK,IAAIhC,EAAI,EAAGA,EAAIf,KAAKgD,SAAS5B,OAAQL,IACxC8B,EAAIG,SAASjC,GAAKf,KAAKgD,SAASjC,GAGlC,OAAO8B,IAxBX,mBA2BE,WACE7C,KAAK8C,MAAQ,EACb9C,KAAKgD,SAAW1B,MAAMtB,KAAKyB,KAAOzB,KAAKyB,MAAMwB,KAAK,QA7BtD,2BAgCE,SAAcC,EAASC,EAAQ/B,GAI7B,IAJuE,IAAlCgC,EAAiC,uDAAxBpD,KAAKgD,SAASE,GACtDF,EAAWhD,KAAKgD,SAClB9D,EAAQ,EAEHmE,EAAM,EAAGA,EAAMjC,EAAQiC,IAAOH,GAAWC,EAC5CC,IAAWJ,EAASE,IACtBhE,IAIJ,OAAOA,IA1CX,wBA6CE,WAME,IALA,IAAMuC,EAAOzB,KAAKyB,KAEd6B,EAAS,CAAC,CAAC,EAAG7B,EAAO,GAAI,CAACA,EAAO,EAAGA,EAAO,IAGtCtC,EAAK,EAAGA,EAAKsC,EAAMtC,IAC1BmE,EAAOrB,KAAK,CAAC9C,EAAKsC,EAAM,IACxB6B,EAAOrB,KAAK,CAAC9C,EAAIsC,IAGnB,OAAO6B,IAxDX,sBA2DE,SAASC,GAKP,IAJA,IAAMD,EAAStD,KAAKwD,aAChBC,EAAW,EACThC,EAAOzB,KAAKyB,KAET4B,EAAM,EAAGA,EAAMC,EAAOlC,OAAQiC,IAAO,CAC5C,IAAMnE,EAAQc,KAAK0D,cAAcJ,EAAOD,GAAK,GAAIC,EAAOD,GAAK,GAAI5B,EAAM8B,GACnErE,EAAQuE,IACVA,EAAWvE,GAIf,OAAOuE,IAvEX,yBA0EE,WAME,IALA,IAAMhC,EAAOzB,KAAKyB,KACZ6B,EAAStD,KAAKwD,aAIXH,EAAM,EAAGA,EAAMC,EAAOlC,OAAQiC,IACrC,GAAIrD,KAAK0D,cAAcJ,EAAOD,GAAK,GAAIC,EAAOD,GAAK,GAAI5B,KAAUA,EAC/D,OAAOzB,KAAKgD,SAASM,EAAOD,GAAK,IAIrC,OAAO,IAtFX,gBAyFE,WACE,OAAOrD,KAAK8C,QA1FhB,2BA6FE,WAAiC,IAAnBC,EAAkB,uDAAX/C,KAAK+C,KACxB,OAAOA,EAAO,IAAM,EAAI,IAAM,MA9FlC,6BAiGE,SAAgB5D,GACd,OAAOa,KAAKgD,SAAS7D,KAlGzB,gCAqGE,SAAmBiE,GACjB,OAAOpD,KAAKgD,SAASW,QAAO,SAACC,EAAOC,GAAR,OAAgBA,IAAQT,EAASQ,EAAQ,EAAIA,IAAO,KAtGpF,2BAyGE,WAAiB,IAAD,OACRL,EAAevD,KAAK8D,gBAW1B,KAVsB9D,KAAK+D,mBAAmBR,IAAiBvD,KAAKyB,MA2B7D,CAEL,IAAMoB,EAAM,GAOZ,OANA7C,KAAKgD,SAASgB,SAAQ,SAACZ,EAAQjE,IA5BjC,SAAqBA,EAAI4D,EAAMC,GAC7B,OAAa,IAATD,GAAc5D,IAAO8E,KAAKC,MAAMlB,EAAS5B,OAAS,KAI9B,OAAjB4B,EAAS7D,IAwBVgF,CAAYhF,EAAI,EAAK4D,KAAM,EAAKC,WAClCH,EAAIZ,KAAK,CAACmC,GAAGjF,OAIV0D,EA1BW,IAAD,aAGjB,IADA,IAAMA,EAAM,GAFK,WAGT9B,GACN,GAAI,EAAKE,gBAAgBF,KAAOwC,EAAc,CAC5C,EAAKP,SAASjC,GAAK,KACnB,IAAMsD,EAAa,EAAKC,gBACxB,EAAKtB,SAASjC,GAAKwC,EAEnBc,EAAWL,SAAQ,SAACO,GACdxD,IAAMwD,EAAUH,IAClBvB,EAAIZ,KAAK,CAAEuC,KAAMzD,EAAGqD,GAAIG,EAAUH,UARlCrD,EAAI,EAAGA,EAAI,EAAKiC,SAAS5B,OAAQL,IAAM,EAAvCA,GAaR,MAAM,CAAN,EAAO8B,GAhBU,uCArHvB,oBAmJE,SAAO4B,GACDC,OAAOC,UAAUF,KACnBA,EAAiC,OAAzBzE,KAAKgD,SAASyB,GAAkB,CAACL,GAAIK,GAAS,CAACD,KAAKC,IAE9D,IAJY,EAINJ,EAAarE,KAAKsE,gBAJZ,cAMKD,GANL,IAMZ,2BAA6B,CAAC,IAArBO,EAAoB,QAE3B,GAAIH,EAAMD,OAASI,EAAKJ,YAAsBK,IAAbJ,EAAML,IAAoBK,EAAML,KAAOQ,EAAKR,IAQ3E,YAPmBS,IAAfJ,EAAMD,OACRxE,KAAKgD,SAASyB,EAAMD,MAAQ,WAEbK,IAAbJ,EAAML,KACRpE,KAAKgD,SAASyB,EAAML,IAAMpE,KAAK8D,gBAC/B9D,KAAK8C,UAEA,GAhBC,8BAmBZ,OAAO,MAtKX,KCeO,SAASgC,EAAcC,GAC5B,IAAKA,aAAmBtC,EACtB,MAAM,IAAIuC,UAAU,oDAGtB,IAEMT,EAAYU,EAFEF,EAAQP,OAEkB,EAD7BO,EAAQtD,KAAO,EAAI,EAAI,GAEpCH,MAAM4D,QAAQX,GAChBQ,EAAQI,OAAOZ,EAAU,KAEzBa,QAAQC,IAAI,sCAxBT,SAAsBN,GAC3B,IAAKA,aAAmBtC,EACtB,MAAM,IAAIuC,UAAU,oDAGtB,IACIT,EADEF,EAAaU,EAAQT,gBAE3B,GACEC,EAAYF,EAAWJ,KAAKC,MAAMD,KAAKqB,SAAWjB,EAAWjD,eACtDmD,EAAU,KAAOA,EAAU,IACpCQ,EAAQI,OAAOZ,GAebgB,CAAaR,IAKjB,SAASE,EAAeF,EAASS,EAAOC,GAMtC,IAJA,IAAMpB,EAAaU,EAAQT,gBAErBoB,EAAW,GAER3E,EAAI,EAAGA,EAAIsD,EAAWjD,OAAQL,IAAK,CAE1C,GADc4E,EAAUZ,EAAQP,OAAQH,EAAWtD,MACrCgE,EAAQtD,KAEpB,MAAO,CAACsD,EAAQtD,KAAM4C,EAAWtD,IAGjC,GAAIyE,EAAQ,EAAIC,EAAU,CACxB,IAAMG,EAAcb,EAAQP,OAC5BoB,EAAYT,OAAOd,EAAWtD,IAE9B,IAAM8E,EAAeZ,EAAeW,EAAaJ,EAAQ,EAAGC,GAC5D,IAAInE,MAAM4D,QAAQW,GAOhB,MAAO,CAACd,EAAQtD,KAAM4C,EAAWtD,IAL7BkD,KAAK6B,IAAID,EAAa,IAAMd,EAAQtD,MACtCiE,EAASzD,KAAK,EAAE4D,EAAa,GAAIxB,EAAWtD,UAQhD2E,EAASzD,KAAK,CAAC,EAAGoC,EAAWtD,KAOnC,GADA2E,EAASvD,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,KACxBsD,EAAStE,OAAS,EACpB,KAAMsE,EAAS,GAAG,KAAOA,EAASA,EAAStE,OAAS,GAAG,IACrDsE,EAASK,MAGb,OAAOL,EAASzB,KAAKC,MAAMD,KAAKqB,SAAWI,EAAStE,SAGtD,SAASuE,EAAUZ,EAASR,GAC1B,IAAMhB,EAAewB,EAAQjB,gBAE7B,OADAiB,EAAQI,OAAOZ,GACRQ,EAAQiB,SAASzC,GCrE1B,SAAS0C,EAAOnH,GACd,OACE,8BAAMA,EAAMoH,SAIhB,SAASC,EAAgBrH,GACvB,OACE,wBAAQ+B,QAAS/B,EAAM+B,QAAvB,SACG/B,EAAMsH,OAKN,IAAMC,EAAb,kDAEE,WAAYvH,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXqG,OAAQ,mBACRlH,OAAQ,IAAI2C,EACZ2E,KAAM,IAAI7D,EAAU,IALL,EAFrB,gDAWE,SAAa8D,GACX,GAAIvG,KAAKH,MAAMyG,KAAKnB,OAAOoB,KACzBvG,KAAKwG,aAAaxG,KAAKH,MAAMyG,OAExBtG,KAAKH,MAAMyG,KAAKG,eAAiBzG,KAAK0G,YAAY,CACrD,IAAMJ,EAAOtG,KAAKH,MAAMyG,KAClBK,EAAa3G,KAEfA,KAAKlB,MAAM8H,WACb9B,EAAcwB,GACdK,EAAWH,aAAaG,EAAW9G,MAAMyG,OAGzCO,YAAY,WACV/B,EAAcwB,GACdK,EAAWH,aAAaG,EAAW9G,MAAMyG,QACxC,QA3Bb,0BAiCE,SAAavB,GACX,IAAM+B,EAAS/B,EAAQ0B,cACnBM,EAAW/G,KAAKH,MAAMkH,SACtBD,IACFC,EAAWhC,EAAQhC,MAGrB/C,KAAKC,SAAS,CAACqG,KAAMvB,EAAS/F,OAAQgB,KAAKH,MAAMb,OAAQ+H,SAAUA,MAxCvE,6BA2CE,SAAgB3H,GACdY,KAAKH,MAAMb,OAAOgI,SAAShH,KAAKH,MAAMkH,SAAU3H,GAChDY,KAAKC,SAAS,CAACqG,KAAMtG,KAAKH,MAAMyG,KAAMtH,OAAQgB,KAAKH,MAAMb,OAAQ+H,cAAUlC,MA7C/E,sBAgDE,WACE,IAAMyB,EAAOtG,KAAKH,MAAMyG,KACxB,OAAOA,EAAKxC,kBAAoBwC,EAAKxC,cAAc,KAlDvD,uBAqDE,WACE9D,KAAKC,SAAS,CAACqG,KAAM,IAAI7D,EAAUzC,KAAKH,MAAMyG,KAAK7E,MAAOzC,OAAQgB,KAAKH,MAAMb,OAAQ+H,cAAUlC,MAtDnG,6BAyDE,WACE7E,KAAKH,MAAMb,OAAO4D,QAClB5C,KAAKC,SAAS,CAACqG,KAAMtG,KAAKH,MAAMyG,KAAMtH,OAAQgB,KAAKH,MAAMb,OAAQ+H,cAAUlC,MA3D/E,oBA8DE,WAAU,IAAD,OACDyB,EAAOtG,KAAKH,MAAMyG,KACpBJ,EAAM,gBAAYI,EAAKvD,KAAO,EAAxB,yBAA0CuD,EAAKxC,iBAEnDgD,EAASR,EAAKG,cAChBK,IACFZ,EAAM,qBAAiBY,EAAjB,qBAAoCR,EAAKvD,OAGjD,IAAMlC,EAAUyF,EAAKG,eAAiBzG,KAAK0G,YAAc1G,KAAKH,MAAMkH,cAAWlC,EAAY,SAAC0B,GAAc,EAAKU,aAAaV,IAE5H,OACE,sBAAKxH,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAACkH,EAAD,CAAQC,OAAQA,MAElB,cAAC,EAAD,CAAgBrF,QAASA,EAASY,KAAM6E,EAAK7E,KAAMR,gBAAiB,SAACsF,GAAc,OAAOD,EAAKrF,gBAAgBsF,MAC/G,qBAAKxH,UAAU,WAAf,SACA,cAACoH,EAAD,CAAiBC,KAAK,aAAavF,QAAS,WAAO,EAAKqG,iBAGvDlH,KAAKH,MAAMkH,SAAW,cAAC,EAAD,CAAmB3G,gBAAiB,SAAChB,GAAU,EAAKgB,gBAAgBhB,MAAU,GACrG,cAACP,EAAD,CAAqBG,OAAQgB,KAAKH,MAAMb,SACxC,qBAAKD,UAAU,WAAf,SACA,cAACoH,EAAD,CAAiBC,KAAK,mBAAmBvF,QAAS,WAAO,EAAKsG,8BAtFtE,GAA0BzG,IAAMC,WChBhCyG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4077ed00.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './highscores-component.css'\r\nexport function HighscoresComponent(props) {\r\n\r\n  return (\r\n    <div className=\"highscores\">\r\n      <h2>Highscores</h2>\r\n      <div className=\"centering\">\r\n      <table>\r\n        <thead><tr><th>Score</th><th>Name</th><th>Date</th></tr></thead>\r\n        <tbody>\r\n        {props.scores.scores.map((score, ix) => {return(<tr className=\"score-row\" key={ix}><td>{score.score}</td><td>{score.name}</td><td>{timeToString(score.time)}</td></tr>)})}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction timeToString(scoreTime) {\r\n  const [, month, date, year, time] = scoreTime.split(\" \")\r\n  return `${date} ${month} ${year} - ${time}` // to avoid unused var problem in eslint\r\n}","import React from 'react'\r\n\r\nexport class NameFormComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {value: ''}\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value})\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault()\r\n    if (this.props.onNameSubmitted) {\r\n      this.props.onNameSubmitted(this.state.value)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>You Made it to the Highscores</h2>\r\n      <form onSubmit={(event) => {return this.handleSubmit(event)}}>\r\n        <label>\r\n          Enter Name: \r\n          <input type=\"text\" value={this.state.value} onChange={(event) => {return this.handleChange(event)}} />\r\n        </label>\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport './board-component.css'\r\n\r\nclass Zquare extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <button className=\"square\" onClick={() => this.props.onClick()}>\r\n        {this.props.value}\r\n      </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport class BoardComponent extends React.Component {\r\n  renderSquare(i, doNada) {\r\n    return <Zquare value={this.props.getSquareSymbol(i)}\r\n             onClick={()=> doNada ? this.doNada() : this.handleClick(i)}\r\n             key={i}/>\r\n  }\r\n\r\n  doNada() {\r\n\r\n  }\r\n  \r\n  handleClick(i) {\r\n    this.props.onClick(i)\r\n  }\r\n  \r\n  renderRow(start, length, doNada) {\r\n    const range = [...Array(length).keys()]\r\n    return (\r\n       <div className=\"board-row\" key={start}>\r\n         { range.map((i) => this.renderSquare(start + i, doNada))}\r\n       </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    \r\n    const doNada = !this.props.onClick\r\n    const size = this.props.size\r\n\r\n    const range = [...Array(size).keys()]\r\n    return (\r\n      <div className=\"game-board\">\r\n      <div>\r\n          { range.map((i) => this.renderRow(i * size, size, doNada)) }\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nexport class Highscores {\r\n  #_scores\r\n\r\n  constructor() {\r\n    this._scores = localStorage.getItem('scores') ? JSON.parse(localStorage.getItem('scores')) : [];\r\n  }\r\n\r\n  addScore(score, name) {\r\n    this._scores.push({score:score, name:name, time:Date()})\r\n    this._scores.sort((a, b) => {return b.score - a.score})\r\n    this._save()\r\n  }\r\n\r\n  get scores() {\r\n    return [...this._scores]\r\n  }\r\n\r\n  _save() {\r\n    localStorage.setItem('scores', JSON.stringify(this._scores))\r\n  }\r\n\r\n  reset() {\r\n    this._scores = []\r\n    this._save()\r\n  }\r\n}","export class TicTacToe {\r\n  #_size\r\n  #_turn\r\n  #_squares\r\n\r\n  constructor(size) {\r\n    if (size < 3 || size % 2 !== 1) {\r\n      throw new Error(`The argument size: '${size}' is not valid for tic tac toe (3, 5, 7, ...)`) \r\n    }\r\n    this._size = size\r\n    this.reset()\r\n  }\r\n\r\n  get size() {\r\n    return this._size\r\n  }\r\n\r\n  from() {\r\n    const ret = new TicTacToe(this.size)\r\n    ret._turn = this.turn\r\n    for (let i = 0; i < this._squares.length; i++) {\r\n      ret._squares[i] = this._squares[i]\r\n    }\r\n\r\n    return ret\r\n  }\r\n\r\n  reset() {\r\n    this._turn = 0\r\n    this._squares = Array(this.size * this.size).fill(null)\r\n  }\r\n\r\n  _scoreSegment(startIx, stride, length, symbol = this._squares[startIx]) {\r\n    const _squares = this._squares\r\n    let score = 0\r\n      \r\n    for (let cIx = 0; cIx < length; cIx++, startIx += stride) {\r\n      if (symbol === _squares[startIx]) {\r\n        score++\r\n      }\r\n    }\r\n\r\n    return score\r\n  }\r\n\r\n  _getChecks() {\r\n    const size = this.size\r\n    // checks array with start and stride parameters\r\n    let checks = [[0, size + 1], [size - 1, size - 1]]  // the diagonal checks\r\n\r\n    // add all rows and col checks\r\n    for (let ix = 0; ix < size; ix++) {\r\n      checks.push([ix * size, 1])\r\n      checks.push([ix, size])\r\n    }\r\n\r\n    return checks\r\n  }\r\n\r\n  getScore(playerSymbol) {\r\n    const checks = this._getChecks()\r\n    let maxScore = 0\r\n    const size = this.size\r\n\r\n    for (let cIx = 0; cIx < checks.length; cIx++) {\r\n      const score = this._scoreSegment(checks[cIx][0], checks[cIx][1], size, playerSymbol)\r\n      if (score > maxScore) {\r\n        maxScore = score\r\n      }\r\n    }\r\n\r\n    return maxScore\r\n  }\r\n\r\n  checkWinner() {\r\n    const size = this.size\r\n    const checks = this._getChecks()\r\n    \r\n\r\n    // perform the checks\r\n    for (let cIx = 0; cIx < checks.length; cIx++) {\r\n      if (this._scoreSegment(checks[cIx][0], checks[cIx][1], size) === size) {\r\n        return this._squares[checks[cIx][0]]\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  get turn() {\r\n    return this._turn\r\n  }\r\n\r\n  getTurnSymbol(turn = this.turn) {\r\n    return turn % 2 === 0 ? 'X' : 'O'\r\n  }\r\n\r\n  getSquareSymbol(ix) {\r\n    return this._squares[ix]\r\n  }\r\n\r\n  countPlayerSymbols(symbol) {\r\n    return this._squares.reduce((count, sym) => sym === symbol ? count + 1 : count, 0)\r\n  }\r\n\r\n  getValidMoves() {\r\n    const playerSymbol = this.getTurnSymbol()\r\n    const allTokensUsed = this.countPlayerSymbols(playerSymbol) >= this.size\r\n\r\n    function isValidMove(ix, turn, _squares) {\r\n      if (turn === 0 && ix === Math.floor(_squares.length / 2)) {\r\n        return false\r\n      }\r\n  \r\n      return _squares[ix] === null\r\n    }\r\n\r\n    if (allTokensUsed) {\r\n      // first remove one token, then get all free squares\r\n      const ret = []\r\n      for(let i = 0; i < this._squares.length; i++) {\r\n        if (this.getSquareSymbol(i) === playerSymbol) {\r\n          this._squares[i] = null;\r\n          const validMoves = this.getValidMoves() // fetches an array of arrays with valid moves\r\n          this._squares[i] = playerSymbol\r\n\r\n          validMoves.forEach((validMove) => {\r\n            if (i !== validMove.to) {\r\n              ret.push({ from: i, to: validMove.to }) // first i must be removed and then moved to ix\r\n            }\r\n          })\r\n        }\r\n      }\r\n      return ret\r\n    } else {\r\n      // all free squares are valid moves\r\n      const ret = []\r\n      this._squares.forEach((symbol, ix) => {\r\n        if (isValidMove(ix, this.turn, this._squares)) {\r\n          ret.push({to:ix})\r\n        }\r\n      })\r\n\r\n      return ret\r\n    }\r\n  }\r\n\r\n  doMove(aMove) {\r\n    if (Number.isInteger(aMove)) {\r\n      aMove = this._squares[aMove] === null ? {to: aMove} : {from:aMove}\r\n    }\r\n    const validMoves = this.getValidMoves()\r\n    \r\n    for (let move of validMoves) {\r\n    \r\n      if (aMove.from === move.from && (aMove.to === undefined || aMove.to === move.to)) {\r\n        if (aMove.from !== undefined) {\r\n          this._squares[aMove.from] = null\r\n        }\r\n        if (aMove.to !== undefined) {\r\n          this._squares[aMove.to] = this.getTurnSymbol()\r\n          this._turn++\r\n        }\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  \r\n}","import { TicTacToe } from \"./tictactoe\"\r\n\r\nexport function doRandomMove(tttGame) {\r\n  if (!tttGame instanceof TicTacToe) {\r\n    throw new TypeError('argument tttGame is not an instance of TicTacToe')\r\n  }\r\n\r\n  const validMoves = tttGame.getValidMoves()\r\n  let validMove\r\n  do {\r\n    validMove = validMoves[Math.floor(Math.random() * validMoves.length)]\r\n  } while (validMove[0] === validMove[1]) // we discard movement from and to the same square\r\n  tttGame.doMove(validMove)\r\n}\r\n\r\nexport function doNegimaxMove(tttGame) {\r\n  if (!tttGame instanceof TicTacToe) {\r\n    throw new TypeError('argument tttGame is not an instance of TicTacToe')\r\n  }\r\n\r\n  const tttGameCopy = tttGame.from()\r\n  const maxDepth = tttGame.size < 5 ? 6 : 2\r\n  const validMove = getNegiMaxMove(tttGameCopy, 0, maxDepth)\r\n  if (Array.isArray(validMove)) {\r\n    tttGame.doMove(validMove[1])\r\n  } else {\r\n    console.log(\"AI is screwed... doing random move\")\r\n    doRandomMove(tttGame)\r\n  }\r\n  \r\n}\r\n\r\nfunction getNegiMaxMove(tttGame, depth, maxDepth) {\r\n\r\n  const validMoves = tttGame.getValidMoves()\r\n\r\n  const tieMoves = []\r\n\r\n  for (let i = 0; i < validMoves.length; i++) {\r\n    const score = scoreMove(tttGame.from(), validMoves[i])\r\n    if (score === tttGame.size) {\r\n      // this would be a win for me so I would go for it\r\n      return [tttGame.size, validMoves[i]]\r\n    } else {\r\n      // I'm not a winner by this move so better check what the opponent would do if I did this\r\n      if (depth + 1 < maxDepth) {\r\n        const tttGameCopy = tttGame.from()\r\n        tttGameCopy.doMove(validMoves[i])\r\n\r\n        const opponentMove = getNegiMaxMove(tttGameCopy, depth + 1, maxDepth)\r\n        if (Array.isArray(opponentMove)) {\r\n          // opponent does not seem to be able to win if I do this so we have a potential move\r\n          if (Math.abs(opponentMove[0]) < tttGame.size) {\r\n            tieMoves.push([-opponentMove[0], validMoves[i]]) // score is negated i.e negimax\r\n          }\r\n        } else {\r\n          // opponent has no valid moves this is good\r\n          return [tttGame.size, validMoves[i]]\r\n        }\r\n      } else {\r\n        // recursion depth met so we must take a chance on this\r\n        tieMoves.push([0, validMoves[i]])\r\n      }\r\n    }\r\n  }\r\n\r\n  // select a random move among the higest performing moves\r\n  tieMoves.sort((a, b) => b - a)\r\n  if (tieMoves.length > 1) {\r\n    while(tieMoves[0][0] !== tieMoves[tieMoves.length - 1][0]) {\r\n      tieMoves.pop()\r\n    }\r\n  }\r\n  return tieMoves[Math.floor(Math.random() * tieMoves.length)]\r\n}\r\n\r\nfunction scoreMove(tttGame, validMove) {\r\n  const playerSymbol = tttGame.getTurnSymbol()\r\n  tttGame.doMove(validMove)\r\n  return tttGame.getScore(playerSymbol)\r\n}","import React from 'react'\r\nimport './game-component.css'\r\nimport {HighscoresComponent} from '../highscores/highscores-component'\r\nimport {NameFormComponent} from '../nameform/nameform-component'\r\nimport {BoardComponent} from '../board/board-component'\r\nimport {Highscores} from '../../model/highscores'\r\nimport { TicTacToe } from '../../model/tictactoe'\r\nimport { doNegimaxMove } from '../../model/tictactoe-ai'\r\n\r\n\r\nfunction Status(props) {\r\n  return (\r\n    <div>{props.status}</div>\r\n  )\r\n}\r\n\r\nfunction ButtonComponent(props) {\r\n  return (\r\n    <button onClick={props.onClick}>\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport class Game extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      status: \"Game Not Started\",\r\n      scores: new Highscores(),\r\n      game: new TicTacToe(3)\r\n    }\r\n  }\r\n\r\n  onBoardClick(squareIx) {\r\n    if (this.state.game.doMove(squareIx)) {\r\n      this.onGameUpdate(this.state.game)\r\n          \r\n      if (!this.state.game.checkWinner() && this.isAITurn()) {\r\n        const game = this.state.game\r\n        const thisObject = this\r\n        \r\n        if (this.props.noAITimer) {\r\n          doNegimaxMove(game)\r\n          thisObject.onGameUpdate(thisObject.state.game)\r\n        } else {\r\n          // this simulates some thinking time that makes the experience better\r\n          setTimeout( function () {\r\n            doNegimaxMove(game)\r\n            thisObject.onGameUpdate(thisObject.state.game)\r\n          }, 2000)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onGameUpdate(tttGame) {\r\n    const winner = tttGame.checkWinner()\r\n    let newScore = this.state.newScore\r\n    if (winner) {\r\n      newScore = tttGame.turn\r\n    }\r\n\r\n    this.setState({game: tttGame, scores: this.state.scores, newScore: newScore})\r\n  }\r\n\r\n  onNameSubmitted(name) {\r\n    this.state.scores.addScore(this.state.newScore, name)\r\n    this.setState({game: this.state.game, scores: this.state.scores, newScore: undefined})\r\n  }\r\n  \r\n  isAITurn() {\r\n    const game = this.state.game\r\n    return game.getTurnSymbol() === game.getTurnSymbol(1)\r\n  }\r\n\r\n  resetGame() {\r\n    this.setState({game: new TicTacToe(this.state.game.size), scores: this.state.scores, newScore: undefined})\r\n  }\r\n\r\n  resetHighscores() {\r\n    this.state.scores.reset()\r\n    this.setState({game: this.state.game, scores: this.state.scores, newScore: undefined})\r\n  }\r\n\r\n  render() {\r\n    const game = this.state.game\r\n    let status = `Turn: ${game.turn + 1} Next Player: ${game.getTurnSymbol()}`\r\n\r\n    const winner = game.checkWinner()\r\n    if (winner) {\r\n      status = `Winner is: ${winner} at Turn: ${game.turn}`\r\n    }\r\n\r\n    const onClick = game.checkWinner() || this.isAITurn() || this.state.newScore ? undefined : (squareIx) => {this.onBoardClick(squareIx)}\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-info\">\r\n          <Status status={status}/>  \r\n        </div>\r\n        <BoardComponent onClick={onClick} size={game.size} getSquareSymbol={(squareIx) => {return game.getSquareSymbol(squareIx)}}/>\r\n        <div className=\"controls\">\r\n        <ButtonComponent text=\"Reset Game\" onClick={() => {this.resetGame()}}/>\r\n        </div>\r\n        \r\n        {this.state.newScore ? <NameFormComponent onNameSubmitted={(name) => {this.onNameSubmitted(name)}}/>:''}\r\n        <HighscoresComponent scores={this.state.scores} />\r\n        <div className=\"controls\">\r\n        <ButtonComponent text=\"Reset Highscores\" onClick={() => {this.resetHighscores()}}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {Game} from './components/game/game-component'\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}